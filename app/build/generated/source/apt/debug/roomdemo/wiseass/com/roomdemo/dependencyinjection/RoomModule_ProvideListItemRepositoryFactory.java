// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package roomdemo.wiseass.com.roomdemo.dependencyinjection;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import roomdemo.wiseass.com.roomdemo.data.ListItemDao;
import roomdemo.wiseass.com.roomdemo.data.ListItemRepository;

public final class RoomModule_ProvideListItemRepositoryFactory
    implements Factory<ListItemRepository> {
  private final RoomModule module;

  private final Provider<ListItemDao> listItemDaoProvider;

  public RoomModule_ProvideListItemRepositoryFactory(
      RoomModule module, Provider<ListItemDao> listItemDaoProvider) {
    this.module = module;
    this.listItemDaoProvider = listItemDaoProvider;
  }

  @Override
  public ListItemRepository get() {
    return Preconditions.checkNotNull(
        module.provideListItemRepository(listItemDaoProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<ListItemRepository> create(
      RoomModule module, Provider<ListItemDao> listItemDaoProvider) {
    return new RoomModule_ProvideListItemRepositoryFactory(module, listItemDaoProvider);
  }

  public static ListItemRepository proxyProvideListItemRepository(
      RoomModule instance, ListItemDao listItemDao) {
    return instance.provideListItemRepository(listItemDao);
  }
}
