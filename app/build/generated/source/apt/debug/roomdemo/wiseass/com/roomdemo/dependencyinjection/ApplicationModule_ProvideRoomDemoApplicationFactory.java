// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package roomdemo.wiseass.com.roomdemo.dependencyinjection;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import roomdemo.wiseass.com.roomdemo.RoomDemoApplication;

public final class ApplicationModule_ProvideRoomDemoApplicationFactory
    implements Factory<RoomDemoApplication> {
  private final ApplicationModule module;

  public ApplicationModule_ProvideRoomDemoApplicationFactory(ApplicationModule module) {
    this.module = module;
  }

  @Override
  public RoomDemoApplication get() {
    return Preconditions.checkNotNull(
        module.provideRoomDemoApplication(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<RoomDemoApplication> create(ApplicationModule module) {
    return new ApplicationModule_ProvideRoomDemoApplicationFactory(module);
  }

  public static RoomDemoApplication proxyProvideRoomDemoApplication(ApplicationModule instance) {
    return instance.provideRoomDemoApplication();
  }
}
